buildscript {
	repositories {
		mavenCentral()
		mavenLocal()
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/release" }
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE"
		// remove::start[]
		classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:${findProperty('verifierVersion') ?: verifierVersion}"
		// remove::end[]
	}
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
	mavenLocal()
	maven { url "http://repo.spring.io/snapshot" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/release" }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// remove::start[]
apply plugin: 'spring-cloud-contract'
// remove::end[]
apply plugin: 'maven-publish'

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:$BOM_VERSION"
	}
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.cloud:spring-cloud-starter-stream-rabbit")

	testCompile("org.springframework.cloud:spring-cloud-stream-test-support")
	// remove::start[]
	testCompile("org.springframework.cloud:spring-cloud-starter-contract-verifier")
	// remove::end[]
}

// remove::start[]
contracts {
	// Since we want to use the SCM, we set the dependency of our project
	// to be used with the repo with contracts
	contractDependency {
		stringNotation = "${project.group}:${project.name}:${project.version}"
	}
	contractRepository {
		repositoryUrl = "git://file://${System.getenv("ROOT")}/target/contract_git/"
	}
	// The JAR with contracts should be taken from Maven local
	contractsMode = "LOCAL"
	// Base package for generated tests
	basePackageForTests = "com.example"
	baseClassMappings {
		baseClassMapping(".*messaging.*", "com.example.BeerMessagingBase")
		baseClassMapping(".*rest.*", "com.example.BeerRestBase")
	}
}

publish.dependsOn("publishStubsToScm")
publishToMavenLocal.dependsOn("publishStubsToScm")
// remove::end[]

test {
	testLogging {
		exceptionFormat = 'full'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.3.1'
}
